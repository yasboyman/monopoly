Index: src/Components/player1.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport purchasePropertyAction from '../actions/passingINFOAction'\n\n\n //this component will grab data, and allow player to purchase using onClick //\nconst  PlayerActiveButtons  = () => {\n\n    // dicePositions: state.diceReducer.dicePosition,\n    // dataArray: state.fullDataArray,\n    // players: state.playersReducer.players,\n    // properties: state.propertiesData,\n\n\n    const dispatch = useDispatch();\n\n  const dicePositions = useSelector( state=> state.diceReducer.dicePosition);\nconst dataArray = useSelector( state => state.fullDataArray);\nconst players = useSelector( state => state.playersReducer.players);\n    const properties = useSelector( state => state.propertiesData );\n\n\n//DISPLAYS CURRENT ACTIVE PLAYER\n       const  currentPlayerName = () =>  players.map(player => (player.active === true  ? player.name : null));\n\n\n// OBJ OF CURRENT ACTIVE PLAYER DATA\n        const active_Player_obj = players.filter(player => player.active);\n\n//CURRENT DICE POSITION OF PLAYER\n        const active_properties_info = players.map(player =>  ( player.active && player.position));\n        const playerDicePosition = active_properties_info.toString().replace(/[^0-9]/g, '');\n        const active_properties_data = dataArray[playerDicePosition];\n\n\n\n            // GETS INFO OF PROPERTIES- NAME, PRICE, COLOR, RENT\n        const propertyName = active_properties_data && active_properties_data.name;\n        const priceOfProperty = active_properties_data && active_properties_data.price;\n        const colorOfProperty = active_properties_data && active_properties_data.color;\n        const rentOfProperty = active_properties_data && active_properties_data.rent;\n        const ownerOfProperty =  Object.keys(properties)\n\n        // const findPlayerOwner = ownerOfProperty.on\n\n        const handlePurchase = () => {\n            const currentProperty = properties[active_properties_data.name];\n            if (!currentProperty.purchased) {\n                return dispatch(purchasePropertyAction({\n                    active_Player_obj, active_properties_data,\n                    colorOfProperty\n                })) && playAudioBuy.play()\n            } else {\n                alert('property has already been purchased')\n            }\n        }\n\n\n    const showIfPurchased = () => {\n        const currentProperty = properties[active_properties_data.name];\n        const ownerOfProperty11 =  currentProperty && currentProperty.owner.toString()\n\n        console.log('ownerOfProperty11', ownerOfProperty11)\n        if (ownerOfProperty11 === false || 'undefined') {\n            return `You can purchase this property`\n        } else {\n            return `Owner: ${ownerOfProperty11}`\n        }\n    }\n\n\n        const playAudioBuy =  new Audio('http://soundjay.com/misc/coins-in-hand-2.wav');\n            const endPlayerTurn  = new Audio('http://orteil.dashnet.org/cookieclicker/snd/buy2.mp3');\n\n            const handleEndPlayerTurn  = () => {\n               return    dispatch({type:'END_PLAYER_TURN'})\n                   // && endPlayerTurn.play(); Uncaught (in promise) DOMException: The element has no supported sources.\n            };\n\n            // console.log('FIREEEEE',   active_properties_data && ownerOfProperty[active_properties_data.name])\n\n        return (\n\n            <div\n\n                className={'players'}>\n                {/*{active_Player_Money < 0 ? dispatch({type:'PLAYER_BROKE'}) : null}*/}\n\n\n\n                {active_properties_data &&\n\n                <div\n                    className={'propertyList'}\n                    style={{display: \"flex\", flexDirection: 'column', alignItems: 'center',\n                        width: '200px', height: '200px', backgroundColor: \"white\", top: '10%',\n                        right: '70%', marginRight: '-200px', zIndex: '999', borderRadius: '12%', fontSize: '12px',}}>\n\n                    {{propertyName} && <h5> Property Details:  </h5>}\n                    <h5> Current Player : {currentPlayerName()} </h5>\n                    <h5 style={{margin: '-8px'}}>{propertyName && propertyName}</h5>\n                        <h5>  {priceOfProperty &&  `£ ${priceOfProperty}`} </h5>\n                    <h5>{showIfPurchased()}</h5>\n                    <h5>  {rentOfProperty &&  ` Rent : £${rentOfProperty}`}</h5>\n\n\n\n\n                   \n\n                </div> }\n\n\n\n                <div className={'purchaseButton'}>\n                    {/*// DISPLAYS 'BUY' BUTTON IF PROPERTY TYPE IS 'LOCATION//*/}\n                    { active_properties_data && active_properties_data.type == 'location'  ? <button\n                        onClick={ handlePurchase }\n                        className={'purchaseButton'}\n                    > Buy Property </button> : null  }\n                    <button\n                        className={'purchaseButton'}\n                        onClick={  () => handleEndPlayerTurn() }>End turn</button>\n\n\n\n                </div>\n\n\n            </div>\n        )\n\n};\n\n\n\nexport default PlayerActiveButtons
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Components/player1.js	(revision 46b3b55a97a47430422a8c29464dff0bb2af4faa)
+++ src/Components/player1.js	(date 1606078873000)
@@ -86,8 +86,6 @@
                 className={'players'}>
                 {/*{active_Player_Money < 0 ? dispatch({type:'PLAYER_BROKE'}) : null}*/}
 
-
-
                 {active_properties_data &&
 
                 <div
Index: src/Components/BoardData.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\nimport {connect} from 'react-redux'\n\nconst BoardData = ({data, position, players}) => {\n// sets the position of the board and css of each Card on Board\n\n    // console.log('dice Position: ' , `${(window.innerHeight - 120)/20}px`)   // what is this 20px?\n\n    const style = {\n        border: 'solid 1px black',\n        width: position === 'side' ? '17%' : '80%' ,\n        fontSize: '9px',\n        height: `${(window.innerHeight)/11.75}px` ,\n        marginBottom: '30px',\n        textAlign: 'center',\n        margin: '1px',\n        backgroundColor: 'white',\n        boxShadow: '0 4px 8px 0 rgba(0,0,0,0.2)',\n        borderRadius: ' 0 0 10% 10%',\n    };\n\n    // sets the card title name along with Color of title\n    const styleName = {\n        backgroundColor: data.color,\n        boxShadow: '0 4px 8px 0 rgba(0,0,0,0.2)',\n        fontSize: '10px',\n        marginTop: '0px',\n        width: '100%',\n        height: '20%',\n        border: 'hidden',\n        textAlign: 'inherit',\n        position: 'relative',\n        fontWeight: 'bold',\n    };\n\n    const renderPlayers = () => {\n        return players.map((player) => {\n            if (player.position === data.id -1){\n                return (\n                    <h4 style={{\n\n                        backgroundColor: player.color,\n                        boxShadow: '0 4px 8px 0 rgba(0,0,0,0.2)',\n                        zIndex: '99  !important',\n                        paddingTop: '10px',\n                        animation:  player.active? 'shake 1s cubic-bezier(.36,.07,.19,.97) both': null,\n                        animationIterationCount:'infinite',\n                        transform: 'translate3d(0, 0, 0)',\n                        backfaceVisibility: 'hidden',\n                        borderRadius:'30%',\n                        // padding:' 10% 10% 10% 10px',\n                        height: '25px',\n                        position: 'absolute',\n                        width: 'auto',\n                        maxHeight: '25px'\n\n\n                    }}>{player.name}</h4>\n\n\n                )\n            }\n\n        })\n\n    };\n\n    return (\n        <div  className={'cards'} style={style}>\n\n\n            <header style={styleName}> {data.name} </header>\n\n            {/*// renders the name of the player on the cards //*/}\n            <div> {renderPlayers() && renderPlayers()} </div>\n\n            {data.price && <h3 style={{fontSize: '8px', marginTop: '37px'}}>£{data.price}</h3> }\n\n            {data.name === ' Chance ' &&\n\n            <div>\n\n                <img\n                    className={'chance'} alt={'chance'} src={require('../assests/monopoly-chance-question-mark.png')}/>\n            </div>\n            }\n\n            {data.name === 'Free Parking' &&\n            <img className={'freeParking'} alt={'parking'} src={require('../assests/Free-parking.png')} />\n            }\n\n            {data.name === 'Community Chest' &&\n            <img\n                style={{backgroundColor: 'white'} }\n                className={'communityChest'} alt={'chest'} src={require('../assests/chest.gif')} />\n            }\n\n\n            {data.name === 'Go to Jail' &&\n            <img className={'goToJail'} alt={'jail'} src={require('../assests/monopoly-prison-board.jpg')} />\n            }\n\n            {data.type == 'Station' &&\n            <img\n                style={{backgroundColor: 'white'}}\n                className={'station'} alt={'station'} src={require('../assests/trainStation.jpeg')} />\n            }\n\n            {data.name == 'GO' &&\n            <img\n                style={{backgroundColor: 'white'}}\n                className={'go'} alt={'go'} src={require('../assests/go.gif')} />\n            }\n\n            {data.name == 'Jail' &&\n            <img\n                style={{backgroundColor: 'white'}}\n                className={'jail'} alt={'jail'} src={require('../assests/inJail.jpg')} />\n            }\n\n\n\n\n        </div>\n\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    dicePosition: state.diceReducer.dicePosition,\n    dataArray: state.fullDataArray,\n    players: state.playersReducer.players\n\n});\n\n\nexport default connect(mapStateToProps) (BoardData)\n\n\n// {TO DO LIST}  //\n\n\n//- unless double, roll once-                                                                   **** DONE!!\n//- players to be on outside of board - position will be : 'absolute' // parent relative,       **** DONE!!\n//- add images no background                                                                    **** DONE!!\n// - implement rent                                                                              **** DONE!!\n// - current player - money display in UI, mark on UI purchased property,                       ******DONE !!!!\n// pass go get 200                                                                              **** DONE!!!\n// income tax - reducer\n// title for prop bold                                                                          **** DONE!!\n// remove price, move  numbers to bottom,                                                       ***** DONE!!\n// players color ... each player added to store                                                 *****DONE!!!\n    // change anywhere class to functional, useSelectors //\n// player data on main board  data price properties with color of propers cards divs           ******DONE!!!!\n\n\n// fix dice  z index                                    DONE!!!\n// images fix                                       DONE!!!\n// player names more cirlly- radius               DONE!!!\n// apppeal to buyer to puchase, cost preview     DONE!!!\n// h1 to pay rent how much lost\n// dice animation                                   DONE !!!
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Components/BoardData.js	(revision 46b3b55a97a47430422a8c29464dff0bb2af4faa)
+++ src/Components/BoardData.js	(date 1606080463000)
@@ -159,4 +159,12 @@
 // player names more cirlly- radius               DONE!!!
 // apppeal to buyer to puchase, cost preview     DONE!!!
 // h1 to pay rent how much lost
-// dice animation                                   DONE !!!
\ No newline at end of file
+// dice animation                                   DONE !!!
+
+
+// ADD BORDER RADIUS TO COLOR PLAYERINFO UI 9PX 9 0 0
+// jire ticketing
+// two seniors above me , recommended i do personal project, its been fun.
+// ccontrol option I
+//
+//
\ No newline at end of file
